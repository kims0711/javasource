java.lang 패키지
1. Object 
> 모든 클래스의 최고 조상 
> equals() : 부모는 주소 값 비교인데 재정의를 통해 값 비교로 변경 가능(object 오버라이딩하여)
> toString() : 멤버 변수 값 출력 용도로 재정의

2. String
> 문자열을 다루기 위한 클래스
    -String str1 = "";  ->  재사용 개념
    -String str1 = new String("안녕하세요");  ->  새로운 인스턴스 매번 할당(새로 생성)

> 변경 불가능한(immutable) 클래스 (그래서 replace 메소드에서도 원본은 변경 x)

> 주요 메소드
    1) length() : 문자열 길이
    2) charAt(index) : 인덱스에 해당하는 문자 출력
    3) indexOf("") : 문자열 포함 여부에 따라 인덱스 반환
       >lastIndexOf("") : 뒤에서부터 찾기
    4) contains(") : 문자열 포함 여부에 따라 true/false 반환
    5) toCharArray : 문자열 => char 배열로 변환
    6) equals("") : 문자열 비교
       >equalsIgnoreCase("") : 대소문자 구분 없이 문자열 비교
    8) concat("") : 문자열 연결
       >but, 그냥 + 로 연결하는게 더 편하기는 할 듯
    9) endWith("") : 지정된 문자열로 종료 하는지?
       >startWith("") : 지정된 문자열로 시작 하는지?
    10) replace("old", "new") : 바꾸고 싶은 특정 문자열(old)을 원하는 문자열(new)로 바꿈
       >replaceAll("원본", "변경") : 원본(정규식 사용 가능) 찾아서 변경할 문자열로 변경 
       >replaceFirst("원본", "변경") :  원본들을 찾아서 그중에서 가장 처음 것만 변경할 문자열로 변경
      : 여기에서 String은 변경 불가능한 클래스이기 때문에 원본 값은 변하지 않고
        새로운 문자열을 반환하기만 한다. 원본 바꾸고 싶으면 아래 예시처럼 하면 됨
        ex. str = str.replace("hello", "안녕");
    11) substring(시작 숫자) : 특정 위치의 문자열 얻기 
       >substring(시작 숫자, 끝 숫자) : 시작 위치와 끝 위치 지정하여 해당 부분의 문자열만 얻기
    12) split("") : 지정한 분리자로 나누어 "배열"로 반환한다.
       >split("", 나눌 개수) : 위와 같은데 몇개로 나눌지도 정함
    13) 대문자/소문자 변경
       >toLowerCase() : 대문자를 전부 소문자로 바꿈
       >toUpperCase() : 소문자를 전부 대문자로 바꿈
    14) trim() : 양쪽 끝에 있는 공백 제거
    15) valueOf() : 기본타입을 문자열로 반환
       > ex. String str4 = String.valueOf(i);
       > str4 = i + "";  근데 이렇게도 문자열로 바꿀 수 있으니까 방법은 선택하면 됨
       >> 기본타입 + 문자열타입 = 문자열타입


